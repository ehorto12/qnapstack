########################################### SETUP BEFORE RUNNING STACK####################################################################
# 
#####################!!!!!!!!WARNING MAY BREAK APPS YOU INSTALLED THAT UTILIZE THE QNAP WEBSERVER!!!!!!!!!!###############################
#
#       This setup will allow the stack to be deleted and composed while maintaineing all configs and data in your share folders
#
#                                   Setup Assumes Use of Cloudflare for DNS Name 
#                       Directories can be Changed to Already Existing Directors on your QNAP
#                    If you do so the corresponding directory must be changed throughout the entire file
#
# 
# 1. Create the following Share Drives via Control Panel-> Shared Folders - AppData    and   Multimedia
#    - Assign Read and Write Permissions to these folders
#       - Via FileStation in the AppData folder create one directory for each dockerr to store configs
#           - Directories are Heimdall, Hydra, NZBGet, Ombi, Plex, Radarr, Sonarr, Tautulli and Traefik Note: these are case sensitive
#               - Open Traefik folder and create a folder called acme and open said folder
#               - Use notepad on desktop to create an empty file named acme.json file ensuring that the standard .txt is deleted
#               - Create another empty file named traefik.log
#               - Upload acme.json into acme folder and right click and select Properties -> Permissions
#                   - Permissions need to be read and write for owner only
#               - Upload traefik.log into root of Traefik folder (no permission change needed)
#        
# 2. Create the following Share Drive via Control Panel-> Shared Folders - Multimedia
#       - Via filestation in the Multimedia folder create directories to store content from NZBGet, Radarr and Sonarr
#       - Directories are Movies, Television and Downloads: these are case sensitive
#
# 3. Install Container Station
#
# 4. Create user other than admin via Control Panel -> Users 
#       - Can be any user name 
#       - Assign R/W Priviledges to these share folders Container Station, AppData and Mulitmedia
#
# 5. Change QNAP default ports from default via Control Panel-> Sysytem -> General Settings -> System Administrator 
#       - Change the System Port and also Enable HTTPS and change this Port too (I used 8880 and 4443) 
# 
# 6. Enable and Change Ports for Webserver via Control Panel-> General Settigs -> Applications -> WebServer
#       - Enable Webserver if not already
#       - Change Port number and also Enable HTTPS and change this Port too (I used 9880 and 9443)
#  
# 7. Enable SSH via Control Panel Telnet/SSH port should be 22      
# 
# 8. Create docker network for stack to utilze via ssh using putty or similiar tool on desktop
#       - Login in as administrator and command in putty is: docker network create web
#       - Obtain and note PUID and PGID of created user while here   
#          - Command is: id (name of created user)
#
# 9. On Router port forward 80 to 80 and 443 to 443 to QNAP IP Address
#
# 10. Go to Cloudflare under DNS and Set AName for Your Domain Name and a CNAME of ombi pointed to your ANAME
#       - Go to SSL/TLS and select full
#
# 11. Proceed below and replace all mared values with your credentials
#  
# 12. Open Container Station
#       - Select Create and on the upper right select Create Application 
#           - Recommend Notepade++ for this Step Next Step
#       - Copy entire contents starting from traefik below and paste below services ensuring all spacing remains the same
#       - Assign the container any name you'd like
#
# 13. Now click Validate YAML to ensure you have copy and pasted the contents below correctly
# 
# 14. Click create and sit back until the stack is created.
#       - Allow some time, maybe 10 minutes, and verify the acme.json to populate
#       - Verify via File Station acme.json is now populated and not an empty file
#       - If staging was good comment out the line mentioned below in Traefik
#          - Next run will now not use the staging acme and provide real certs
#       - Delete file and repeat uploading and permission change of file as mentioned in step above
#
# 15. Now go into Container Station -> Containers and stop the stack and then remove it
# 
# 16. Repeat steps 12 - 13 only differnce is we have now commented out the line below for obtaining Let's Encrypt Certs
# 
# 17. Configure all your apps
#        - Note A: NZBGet must be configured to have the categories sonarr and radarr
#           - DestDir will just /sonarr and /radarr
#        - Note B: OMBI needs to have ombi.example.com put in the application URL under Customization
#
# Final Thought:  This setupstores all your connfigs. If you remove your satck and reapply it all apps will be configured already
 
version: "3"

services:

# Frontend Homepage for Internal Use Only.  Nice for having a consolidated landing page for the apps below with useful information
             
    muximux:
        image: linuxserver/muximux
        container_name: muximux
        volumes:
            - /share/AppData/Muximux:/config
            - /etc/localtime:/etc/localtime:ro
        env_file: environment.env
        ports:
            - 80:80
        restart: unless-stopped

    heimdall:
        image: linuxserver/heimdall:latest
        container_name: portal
        restart: unless-stopped        
        env_file: environment.env
        volumes:
            - /share/AppData/Heimdall:/config
            - /etc/localtime:/etc/localtime:ro
        ports:
            - 32770:80
            - 32772:443              

# Plex and Tautulli for Plex Stats 

    plex:
        image: linuxserver/plex:latest
        container_name: plex
        restart: unless-stopped
        network_mode: host
        volumes:
            - /share/AppData/Plex:/config
            - /share/Multimedia/TV Shows:/tv
            - /share/Multimedia/Movies:/movies
            - /etc/localtime:/etc/localtime:ro
        env_file: environment.env
        environment:
            - VERSION=docker
        ports:
            - 32400:32400           

# Automation for Movie and TV Grabs

    sonarr:
        image: linuxserver/sonarr:latest
        container_name: sonarr
        restart: unless-stopped         
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /share/AppData/Sonarr:/config
            - /share/Multimedia/TV Shows:/tv
            - /share/Multimedia/Downloads:/downloads
        env_file: environment.env
        ports:
            - 8989:8989           

    radarr:
        image: linuxserver/radarr:latest
        container_name: radarr
        restart: unless-stopped 
        volumes:
            - /share/AppData/Radarr:/config
            - /share/Multimedia/Movies:/movies
            - /share/Multimedia/Downloads:/downloads
            - /etc/localtime:/etc/localtime:ro
        env_file: environment.env
        ports:
            - 7878:7878        

# Downloaders: I only use usenet so if you use torrents you'll need to add a torrent client to the stack 

    nzbget:
        image: linuxserver/nzbget:latest
        container_name: nzbget
        volumes:
            - /share/AppData/NZBGet:/config
            - /share/Multimedia/Downloads:/downloads
            - /share/Multimedia/Downloads/radarr:/radarr
            - /share/Multimedia/Downloads/sonarr:/sonarr
        env_file: environment.env
        ports:
            - 6789:6789          
        restart: unless-stopped

# Indexers for consolidating all your indexers into one. If you use torrents you'll also want to add jackett to the stack

    hydra2:
        image: linuxserver/nzbhydra2:latest
        container_name: nzbhydra2
        restart: unless-stopped         
        volumes:
            - /share/AppData/Hydra:/config
            - /share/Multimedia/Downloads:/downloads
            - /etc/localtime:/etc/localtime:ro
        env_file: environment.env
        ports:
            - 5076:5076          
        
networks:
  web:
    external: true   
